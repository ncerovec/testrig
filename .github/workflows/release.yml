name: Testrig Release
on:
  workflow_dispatch:
    inputs:
      branch:
        description: "The branch to checkout when cutting the release."
        required: true
        default: "main"
      releaseVersion:
        description: "Default version to use when preparing a release."
        required: true
        default: "X.Y.Z"
      developmentVersion:
        description: "Default version to use for new local working copy."
        required: true
        default: "X.Y.Z-SNAPSHOT"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Testrig Source Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Configure Git User
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      - name: Configure GPG Key
        run: |
          # Install gpg secret key
          echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --batch --import
          # Verify gpg secret key
          gpg --list-secret-keys --keyid-format LONG
        env:
          GPG_SIGNING_KEY: ${{secrets.OSSRH_GPG_SIGNING_KEY_BASE64}}

      - name: Cut Testrig Release
        run: >
            mvn clean release:prepare release:perform -B -s .maven-settings.xml
            -Dtag=${{github.event.inputs.releaseVersion}}
            -DreleaseVersion=${{github.event.inputs.releaseVersion}}
            "-DscmReleaseCommitComment=@{prefix} @{artifactId} - release version @{releaseLabel}"
            -DdevelopmentVersion=${{github.event.inputs.developmentVersion}}
            -DscmDevelopmentCommitComment="@{prefix} @{artifactId} - snapshot version ${{github.event.inputs.developmentVersion}}"
            -Dgpg.passphrase=${{secrets.OSSRH_GPG_SIGNING_KEY_PASSPHRASE}}
        env:
          CI_DEPLOY_USERNAME: ${{ secrets.CI_DEPLOY_USERNAME }}
          CI_DEPLOY_PASSWORD: ${{ secrets.CI_DEPLOY_PASSWORD }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ github.token }}
